module pool_ram
#(parameter 
	ADDR=10,
	DATA=24
 )

(
	input clk,
	input we,
	input [ADDR-1:0] addr_a, addr_b,
	input [DATA-1:0] data_a, data_b,
	output [DATA-1:0] a,b
);       

reg [DATA-1:0] mem [2**ADDR-1:0];
reg [ADDR-1:0] addr_b_reg, addr_a_reg;

always @(posedge clk)
begin
	if (we) 
    begin
		  mem[addr_a] <= data_a;
		  mem[addr_b] <= data_b;
		  addr_a_reg <= addr_a;
		  addr_b_reg <= addr_b;
		end
end

assign a = mem[addr_a_reg];
assign b = mem[addr_b_reg];

endmodule 
